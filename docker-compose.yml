services:
  rabbitmq:
    build: ./rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  high_security:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["high_security", "high_security", "high_security"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'high'
      QUEUE_BINDINGS: '[{"priority": "high", "routing_key": "accident.security"},{"priority": "high", "routing_key": "brawl.security"},{"priority": "high", "routing_key": "not_on_list.security"}]'
    restart: always
    container_name: high_security

  high_cleanup:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["high_cleanup", "high_cleanup", "high_cleanup"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'high'
      QUEUE_BINDINGS: '[{"priority": "high", "routing_key": "dirty_table.cleanup"},{"priority": "high", "routing_key": "broken_items.cleanup"},{"priority": "high", "routing_key": "dirty_floor.cleanup"}]'
    restart: always
    container_name: high_cleanup 

  high_catering:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["high_catering", "high_catering", "high_catering"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'high'
      QUEUE_BINDINGS: '[{"priority": "high", "routing_key": "bad_food.catering"},{"priority": "high", "routing_key": "music.catering"},{"priority": "high", "routing_key": "feeling_ill.catering"}]'
    restart: always
    container_name: high_catering

  high_officiant:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["high_officiant", "high_officiant"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'high'
      QUEUE_BINDINGS: '[{"priority": "high", "routing_key": "bride.officiant"},{"priority": "high", "routing_key": "groom.officiant"}]'
    restart: always
    container_name: high_officiant

  high_waiters:
    build: ./waiter
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ['python', 'waiter.py']
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["high_security", "high_cleanup", "high_catering"]'
      NUM_CHANNELS: '3'
      EXCHANGE: 'high'
      QUEUE_BINDINGS: '[{"priority": "high", "routing_key": "accident.security"},{"priority": "high", "routing_key": "broken_items.cleanup"}, {"priority": "high", "routing_key": "bad_food.catering"}]'
    restart: always
    container_name: high_waiters

  medium_security:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["medium_security", "medium_security", "medium_security"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'medium'
      QUEUE_BINDINGS: '[{"priority": "medium", "routing_key": "accident.security"},{"priority": "medium", "routing_key": "brawl.security"},{"priority": "medium", "routing_key": "not_on_list.security"}]'
    restart: always
    container_name: medium_security

  medium_cleanup:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["medium_cleanup", "medium_cleanup", "medium_cleanup"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'medium'
      QUEUE_BINDINGS: '[{"priority": "medium", "routing_key": "dirty_table.cleanup"},{"priority": "medium", "routing_key": "broken_items.cleanup"},{"priority": "medium", "routing_key": "dirty_floor.cleanup"}]'
    restart: always
    container_name: medium_cleanup

  medium_catering:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["medium_catering", "medium_catering", "medium_catering"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'medium'
      QUEUE_BINDINGS: '[{"priority": "medium", "routing_key": "bad_food.catering"},{"priority": "medium", "routing_key": "music.catering"},{"priority": "medium", "routing_key": "feeling_ill.catering"}]'
    restart: always
    container_name: medium_catering

  medium_officiant:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["medium_officiant", "medium_officiant"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'medium'
      QUEUE_BINDINGS: '[{"priority": "medium", "routing_key": "bride.officiant"},{"priority": "medium", "routing_key": "groom.officiant"}]'
    restart: always
    container_name: medium_officiant

  medium_waiters:
    build: ./waiter
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ['python', 'waiter.py']
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["medium_security", "medium_cleanup", "medium_catering"]'
      NUM_CHANNELS: '3'
      EXCHANGE: 'medium'
      QUEUE_BINDINGS: '[{"priority": "medium", "routing_key": "accident.security"},{"priority": "medium", "routing_key": "broken_items.cleanup"}, {"priority": "medium", "routing_key": "bad_food.catering"}]'
    restart: always
    container_name: medium_waiters

  low_security:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["low_security", "low_security", "low_security"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'low'
      QUEUE_BINDINGS: '[{"priority": "low", "routing_key": "accident.security"},{"priority": "low", "routing_key": "brawl.security"},{"priority": "low", "routing_key": "not_on_list.security"}]'
    restart: always
    container_name: low_security

  low_cleanup:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["low_cleanup", "low_cleanup", "low_cleanup"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'low'
      QUEUE_BINDINGS: '[{"priority": "low", "routing_key": "dirty_table.cleanup"},{"priority": "low", "routing_key": "broken_items.cleanup"},{"priority": "low", "routing_key": "dirty_floor.cleanup"}]'
    restart: always
    container_name: low_cleanup

  low_catering:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["low_catering", "low_catering", "low_catering"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'low'
      QUEUE_BINDINGS: '[{"priority": "low", "routing_key": "bad_food.catering"},{"priority": "low", "routing_key": "music.catering"},{"priority": "low", "routing_key": "feeling_ill.catering"}]'
    restart: always
    container_name: low_catering

  low_officiant:
    build: ./consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["python", "consumer.py"]
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["low_officiant", "low_officiant"]' 
      NUM_CHANNELS: '3'
      EXCHANGE: 'low'
      QUEUE_BINDINGS: '[{"priority": "low", "routing_key": "bride.officiant"},{"priority": "low", "routing_key": "groom.officiant"}]'
    restart: always
    container_name: low_officiant

  low_waiters:
    build: ./waiter
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ['python', 'waiter.py']
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=5'
      QUEUE_NAMES: '["low_security", "low_cleanup", "low_catering"]'
      NUM_CHANNELS: '3'
      EXCHANGE: 'low'
      QUEUE_BINDINGS: '[{"priority": "low", "routing_key": "accident.security"},{"priority": "low", "routing_key": "broken_items.cleanup"}, {"priority": "low", "routing_key": "bad_food.catering"}]'
    restart: always
    container_name: low_waiters